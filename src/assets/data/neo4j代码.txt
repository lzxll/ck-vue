--------------------------------1.  建立学科节点与关系-----------------------------------
create (`CK度量`:`学科`{name:'CK度量'});
create (`软件工程`:`学科`{name:'软件工程'});
create (`面向对象程序设计`:`学科`{name:'面向对象程序设计'});
create (`软件测试`:`学科`{name:'软件测试'});
create (`软件维护`:`学科`{name:'软件维护'});
create (`软件质量`:`学科`{name:'软件质量'});
create (`设计模式`:`学科`{name:'设计模式'});
create (`软件项目管理`:`学科`{name:'软件项目管理'});

MATCH (`软件工程`:`学科`{name:'软件工程'}), (`面向对象程序设计`:`学科`{name:'面向对象程序设计'}) CREATE (`软件工程`)-[:`包含`]->(`面向对象程序设计`);
MATCH (`软件工程`:`学科`{name:'软件工程'}), (`软件测试`:`学科`{name:'软件测试'}) CREATE (`软件工程`)-[:`包含`]->(`软件测试`);
MATCH (`软件工程`:`学科`{name:'软件工程'}), (`软件维护`:`学科`{name:'软件维护'}) CREATE (`软件工程`)-[:`包含`]->(`软件维护`);
MATCH (`软件工程`:`学科`{name:'软件工程'}), (`软件质量`:`学科`{name:'软件质量'}) CREATE (`软件工程`)-[:`包含`]->(`软件质量`);


--------------------------------2.  建立度量元-------------------------------------------
create (WMC:`度量元`{name:'WMC'});
create (DIT:`度量元`{name:'DIT'});
create (NOC:`度量元`{name:'NOC'});
create (RFC:`度量元`{name:'RFC'});
create (CBO:`度量元`{name:'CBO'});
create (LCOM:`度量元`{name:'LCOM'});

MATCH (`CK度量`:`学科`{name:'CK度量'}), (WMC:`度量元`{name:'WMC'}) CREATE (`CK度量`)-[:`包含`]->(WMC);
MATCH (`CK度量`:`学科`{name:'CK度量'}), (DIT:`度量元`{name:'DIT'}) CREATE (`CK度量`)-[:`包含`]->(DIT);
MATCH (`CK度量`:`学科`{name:'CK度量'}), (NOC:`度量元`{name:'NOC'}) CREATE (`CK度量`)-[:`包含`]->(NOC);
MATCH (`CK度量`:`学科`{name:'CK度量'}), (RFC:`度量元`{name:'RFC'}) CREATE (`CK度量`)-[:`包含`]->(RFC);
MATCH (`CK度量`:`学科`{name:'CK度量'}), (CBO:`度量元`{name:'CBO'}) CREATE (`CK度量`)-[:`包含`]->(CBO);
MATCH (`CK度量`:`学科`{name:'CK度量'}), (LCOM:`度量元`{name:'LCOM'}) CREATE (`CK度量`)-[:`包含`]->(LCOM);


--------------------------------3.  其他学科的知识点节点-----------------------------------
create (`抽象`:`知识点`{name:'抽象'});
create (`封装`:`知识点`{name:'封装'});
create (`继承`:`知识点`{name:'继承'});
create (`多态`:`知识点`{name:'多态'});
create (`类与对象`:`知识点`{name:'类与对象'});

MATCH (`面向对象程序设计`:`学科`{name:'面向对象程序设计'}), (`抽象`:`知识点`{name:'抽象'}) CREATE (`面向对象程序设计`)-[:`包含`]->(`抽象`);
MATCH (`面向对象程序设计`:`学科`{name:'面向对象程序设计'}), (`封装`:`知识点`{name:'封装'}) CREATE (`面向对象程序设计`)-[:`包含`]->(`封装`);
MATCH (`面向对象程序设计`:`学科`{name:'面向对象程序设计'}), (`继承`:`知识点`{name:'继承'}) CREATE (`面向对象程序设计`)-[:`包含`]->(`继承`);
MATCH (`面向对象程序设计`:`学科`{name:'面向对象程序设计'}), (`多态`:`知识点`{name:'多态'}) CREATE (`面向对象程序设计`)-[:`包含`]->(`多态`);
MATCH (`面向对象程序设计`:`学科`{name:'面向对象程序设计'}), (`类与对象`:`知识点`{name:'类与对象'}) CREATE (`面向对象程序设计`)-[:`包含`]->(`类与对象`);


create (`模块化设计`:`知识点`{name:'模块化设计'});
create (`内聚`:`知识点`{name:'内聚'});
create (`耦合`:`知识点`{name:'耦合'});

MATCH (`软件工程`:`学科`{name:'软件工程'}), (`模块化设计`:`知识点`{name:'模块化设计'}) CREATE (`软件工程`)-[:`包含`]->(`模块化设计`);
MATCH (`模块化设计`:`知识点`{name:'模块化设计'}), (`内聚`:`知识点`{name:'内聚'}) CREATE (`模块化设计`)-[:`包含`]->(`内聚`);
MATCH (`模块化设计`:`知识点`{name:'模块化设计'}), (`耦合`:`知识点`{name:'耦合'}) CREATE (`模块化设计`)-[:`包含`]->(`耦合`);


create (`可测试性`:`知识点`{name:'可测试性'});
create (`可维护性`:`知识点`{name:'可维护性'});
create (`可重用性`:`知识点`{name:'可重用性'});

MATCH (`软件测试`:`学科`{name:'软件测试'}), (`可测试性`:`知识点`{name:'可测试性'}) CREATE (`软件测试`)-[:`包含`]->(`可测试性`);
MATCH (`软件维护`:`学科`{name:'软件维护'}), (`可维护性`:`知识点`{name:'可维护性'}) CREATE (`软件维护`)-[:`包含`]->(`可维护性`);
MATCH (`软件质量`:`学科`{name:'软件质量'}), (`可测试性`:`知识点`{name:'可测试性'}) CREATE (`软件质量`)-[:`包含`]->(`可测试性`);
MATCH (`软件质量`:`学科`{name:'软件质量'}), (`可维护性`:`知识点`{name:'可维护性'}) CREATE (`软件质量`)-[:`包含`]->(`可维护性`);
MATCH (`软件质量`:`学科`{name:'软件质量'}), (`可重用性`:`知识点`{name:'可重用性'}) CREATE (`软件质量`)-[:`包含`]->(`可重用性`);


create (`单一职责模式`:`知识点`{name:'单一职责模式'});
create (`开闭原则`:`知识点`{name:'开闭原则'});
create (`依赖倒转原则`:`知识点`{name:'依赖倒转原则'});
create (`接口隔离原则`:`知识点`{name:'接口隔离原则'});
create (`里氏代换原则`:`知识点`{name:'里氏代换原则'});

MATCH (`设计模式`:`学科`{name:'设计模式'}), (`单一职责模式`:`知识点`{name:'单一职责模式'}) CREATE (`设计模式`)-[:`包含`]->(`单一职责模式`);
MATCH (`设计模式`:`学科`{name:'设计模式'}), (`开闭原则`:`知识点`{name:'开闭原则'}) CREATE (`设计模式`)-[:`包含`]->(`开闭原则`);
MATCH (`设计模式`:`学科`{name:'设计模式'}), (`依赖倒转原则`:`知识点`{name:'依赖倒转原则'}) CREATE (`设计模式`)-[:`包含`]->(`依赖倒转原则`);
MATCH (`设计模式`:`学科`{name:'设计模式'}), (`接口隔离原则`:`知识点`{name:'接口隔离原则'}) CREATE (`设计模式`)-[:`包含`]->(`接口隔离原则`);
MATCH (`设计模式`:`学科`{name:'设计模式'}), (`里氏代换原则`:`知识点`{name:'里氏代换原则'}) CREATE (`设计模式`)-[:`包含`]->(`里氏代换原则`);


create (`质量管理`:`知识点`{name:'质量管理'});
MATCH (`软件项目管理`:`学科`{name:'软件项目管理'}), (`质量管理`:`知识点`{name:'质量管理'}) CREATE (`软件项目管理`)-[:`包含`]->(`质量管理`);





--------------------------------4.2   CK度量关联-----------------------------------
MATCH (`CK度量`:`学科`{name:'CK度量'}), (`面向对象程序设计`:`学科`{name:'面向对象程序设计'}) CREATE (`CK度量`)-[:`关联`]->(`面向对象程序设计`);
MATCH (`CK度量`:`学科`{name:'CK度量'}), (`模块化设计`:`学科`{name:'模块化设计'}) CREATE (`CK度量`)-[:`关联`]->(`模块化设计`);
MATCH (`CK度量`:`学科`{name:'CK度量'}), (`软件测试`:`学科`{name:'软件测试'}) CREATE (`CK度量`)-[:`关联`]->(`软件测试`);
MATCH (`CK度量`:`学科`{name:'CK度量'}), (`软件维护`:`学科`{name:'软件维护'}) CREATE (`CK度量`)-[:`关联`]->(`软件维护`);
MATCH (`CK度量`:`学科`{name:'CK度量'}), (`软件质量`:`学科`{name:'软件质量'}) CREATE (`CK度量`)-[:`关联`]->(`软件质量`);
MATCH (`CK度量`:`学科`{name:'CK度量'}), (`设计模式`:`学科`{name:'设计模式'}) CREATE (`CK度量`)-[:`关联`]->(`设计模式`);
MATCH (`CK度量`:`学科`{name:'CK度量'}), (`软件项目管理`:`学科`{name:'软件项目管理'}) CREATE (`CK度量`)-[:`关联`]->(`软件项目管理`);



MATCH (n) RETURN n

MATCH (n) DETACH DELETE n
